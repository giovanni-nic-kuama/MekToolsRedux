<div class="my-3">
  <label class="text-lg font-medium text-gray-900">
    @Label
  </label>

  <InputText
    class="bg-gray-50 border border-gray-300 text-gray-900 
           text-sm rounded-lg block w-full p-2.5"
    Value="@Value"
    ValueExpression="@(() => Value)"
    placeholder="@PlaceHolder"
    ValueChanged="OnValueChange"/>

  @if (ErrorMessage != null)
  {
    <p class="mt-0.5 text-sm text-red-600 dark:text-red-500">
      @ErrorMessage
    </p>
  }
</div>


@code {
  [Parameter] public string Label { get; set; } = null!;
  [Parameter] public string? InitialValue { get; set; }
  [Parameter] public string PlaceHolder { get; set; } = null!;
  [Parameter] public string? ErrorMessage { get; set; }

  [Parameter] public EventCallback<string> OnChange { get; set; }

  public string Value { get; set; } = "";

  protected override void OnInitialized()
  {
    Value = InitialValue ?? "";

    base.OnInitialized();
  }

  private void OnValueChange(string? value)
  {
    Value = value ?? "";
    OnChange.InvokeAsync(value ?? "");
  }

}