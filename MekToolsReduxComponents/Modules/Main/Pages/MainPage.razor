@using MekToolsReduxCore.Modules.ProjectDirectories.Models
@using MekToolsReduxCore.Modules.ProjectDirectories.Services
@using MekToolsReduxComponents.Modules.Main.Models
@inherits LayoutComponentBase
@page "/main-page/{*pageRoute}"

<div class="bg-green-200 flex-column pb-10">
  <AppBar/>

  <div class="flex justify-center mt-10">
    <div class="w-2/3">
      <CurrentModuleDataCard
        EntitySingularName="@EntitySingularName"
        EntityPluralName="@EntityPluralName"
        DestinationPath="@DestinationPath"/>
    </div>
  </div>

  <div class="flex justify-center mt-10">
    <div class="w-2/3">
      <Card Title="Additional settings">
        <AdditionalSettingsForm
          Model="@AdditionalSettingsFormModel"
          OnAdditionalSettingsChange="@OnAdditionalSettingsChange"/>
      </Card>
    </div>
  </div>

  <div class="flex justify-center mt-10">
    <div class="w-2/3">
      <Card Title="Preview">
        <FileTreePreview ModuleDirectory="ModuleDirectory"/>
      </Card>
    </div>
  </div>

</div>

@code {
  [Parameter] public string? PageRoute { get; set; }

  private string EntitySingularName { get; set; } = null!;

  private string EntityPluralName { get; set; } = null!;

  private string DestinationPath { get; set; } = null!;

  private ModuleDirectory ModuleDirectory { get; set; } = null!;

  private AdditionalSettingsFormModel AdditionalSettingsFormModel { get; set; } = null!;

  protected override void OnInitialized()
  {
    AdditionalSettingsFormModel = new AdditionalSettingsFormModel();

    var parameters = PageRoute?.Split("/") ?? new string[] { };

    if (parameters.Length == 3)
    {
      EntitySingularName = parameters[0];
      EntityPluralName = parameters[1];
      DestinationPath = parameters[2].Replace("@", "\\");

      ModuleDirectory = ModuleDirectoryService
        .GetPreview(singularName: EntitySingularName, pluralName: EntityPluralName, AdditionalSettingsFormModel.EnableEntityConfiguration);
    }
    else
    {
      // TODO: manage errors
      // ERROR
    }

    base.OnInitialized();
  }

  private void OnAdditionalSettingsChange(AdditionalSettingsFormModel model)
  {
    AdditionalSettingsFormModel = model;
    ModuleDirectory = ModuleDirectoryService
      .GetPreview(singularName: EntitySingularName, pluralName: EntityPluralName, AdditionalSettingsFormModel.EnableEntityConfiguration);
  }

}